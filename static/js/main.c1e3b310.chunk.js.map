{"version":3,"sources":["lib/wrappers/HorizontalAnimations.js","lib/util/hexColorPropType.js","lib/wrappers/HorizontalWrapper.js","lib/HorizontalSwitch.js","index.js"],"names":["Blob","keyframes","_templateObject","BlobChecked","_templateObject2","hexColorPropType","props","propName","componentName","prop","length","Error","concat","HorizontalWrapper","styled","label","attrs","offColorShadow","rgba","offColor","onColorShadow","onColor","blobChecked","blob","HorizontalWrapper_templateObject","foregroundColor","propTypes","defaultProps","HorizontalSwitch","onChange","e","isChecked","target","checked","undefined","_this","onStateChange","key","_this$props","this","defaultChecked","disabled","react_default","a","createElement","wrappers_HorizontalWrapper","type","Component","App","state","handleChange","console","log","lib_HorizontalSwitch","ReactDOM","render","src_App","document","getElementById"],"mappings":"uyBAEA,IAAMA,EAAOC,YAAHC,KAYJC,EAAcF,YAAHG,KCMFC,EAdU,SAACC,EAAOC,EAAUC,GACzC,IAAMC,EAAOH,EAAMC,GACnB,MACkB,kBAATE,GACK,MAAZA,EAAK,IACY,IAAhBA,EAAKC,QAAgC,IAAhBD,EAAKC,OAEpB,IAAIC,MAAJ,iBAAAC,OACYL,EADZ,mBAAAK,OACsCJ,EADtC,QAAAI,OAC0DL,EAD1D,gGAIF,4kDCVT,IAAMM,EAAoBC,IAAOC,MAAMC,MAAM,CAC3CC,eAAgB,SAAAX,GAAK,OAAIY,YAAKZ,EAAMa,SAAU,KAC9CC,cAAe,SAAAd,GAAK,OAAIY,YAAKZ,EAAMe,QAAS,KAC5CC,YAAa,SAAAhB,GAAK,OAAIH,GACtBoB,KAAM,SAAAjB,GAAK,OAAIN,IAJSc,CAAHU,IAgBH,SAAAlB,GAAK,OAAIA,EAAMa,UACC,SAAAb,GAAK,OAAIA,EAAMW,gBAcvB,SAAAX,GAAK,OAAIA,EAAMmB,iBASrB,SAAAnB,GAAK,OAAIA,EAAMmB,iBASf,SAAAnB,GAAK,OAAIA,EAAMe,SACC,SAAAf,GAAK,OAAIA,EAAMc,eAS9B,SAAAd,GAAK,OAAIA,EAAMgB,aAOf,SAAAhB,GAAK,OAAIA,EAAMiB,OAetCV,EAAkBa,UAAY,CAC5BL,QAAShB,EACTc,SAAUd,EACVoB,gBAAiBpB,GAGnBQ,EAAkBc,aAAe,CAC/BN,QAAS,UACTF,SAAU,UACVM,gBAAiB,QAGJZ,QC7FTe,6MACJC,SAAW,SAAAC,GACT,IAAMC,EAAYD,EAAEE,OAAOC,aACMC,IAA7BC,EAAK7B,MAAM8B,eACbD,EAAK7B,MAAM8B,cAAcL,EAAWI,EAAK7B,MAAM+B,8EAI1C,IAAAC,EAC4BC,KAAKjC,MAAlCkC,EADCF,EACDE,eAAgBC,EADfH,EACeG,SAEtB,OACEC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAAA,SACEE,KAAK,WACLN,eAAgBA,EAChBC,SAAUA,EACVZ,SAAUU,KAAKV,WAEjBa,EAAAC,EAAAC,cAAA,qBAnBuBG,aAgC/BnB,EAAiBD,aAAe,CAC9Ba,gBAAgB,EAChBC,UAAU,EACVJ,IAAK,cAGQT,QCvCToB,6MAEJC,MAAQ,CACNlB,WAAW,KAGbmB,aAAe,SAACnB,EAAWM,GACzBc,QAAQC,IAAIf,GACZc,QAAQC,IAAIrB,4EAIZ,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAAkBjB,cAAeG,KAAKW,uBAd5BH,aAoBlBO,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c1e3b310.chunk.js","sourcesContent":["import { keyframes } from \"styled-components\";\n\nconst Blob = keyframes`\n  0%, 100% {\n    transform: scale(1);\n  }\n  30% {\n    transform: scale(1.12, .94);\n  }\n  60% {\n    transform: scale(.96, 1.06);\n  }\n`;\n\nconst BlobChecked = keyframes`\n  0% {\n    opacity: 1;\n    transform: scaleX(1);\n  }\n  30% {\n    transform: scaleX(1.44);\n  }\n  70% {\n    transform: scaleX(1.18);\n  }\n  50%,\n  99% {\n    transform: scaleX(1);\n    opacity: 1;\n  }\n  100% {\n    transform: scaleX(1);\n    opacity: 0;\n  }\n`;\n\nexport { Blob, BlobChecked };\n","/**\n * Created by Markus Englund\n * (Refer on https://github.com/markusenglund/react-switch/blob/master/src/hexColorPropType.js)\n */\n\n// Make sure color props are strings that start with \"#\" since other ways to write colors are not supported.\nconst hexColorPropType = (props, propName, componentName) => {\n  const prop = props[propName];\n  if (\n    typeof prop !== \"string\" ||\n    prop[0] !== \"#\" ||\n    (prop.length !== 4 && prop.length !== 7)\n  ) {\n    return new Error(\n      `Invalid prop '${propName}' supplied to '${componentName}'. '${propName}' has to be either a 3-digit or 6-digit hex-color string. Valid examples: '#abc', '#123456'`\n    );\n  }\n  return null;\n};\n\nexport default hexColorPropType;\n","import styled from \"styled-components\";\nimport { rgba } from \"polished\";\n\nimport { Blob, BlobChecked } from \"./HorizontalAnimations\";\n\nimport hexColorPropType from \"../util/hexColorPropType\";\n\nconst HorizontalWrapper = styled.label.attrs({\n  offColorShadow: props => rgba(props.offColor, 0.2),\n  onColorShadow: props => rgba(props.onColor, 0.2),\n  blobChecked: props => BlobChecked,\n  blob: props => Blob\n})`\n  cursor: pointer;\n  input {\n    display: none;\n    & + span {\n      width: 48px;\n      height: 28px;\n      border-radius: 14px;\n      transition: all 0.3s ease;\n      display: block;\n      position: relative;\n      background: ${props => props.offColor};\n      box-shadow: 0 8px 16px -1px ${props => props.offColorShadow};\n      &:before,\n      &:after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        transition: all 0.3s ease;\n      }\n      &:before {\n        top: 5px;\n        left: 5px;\n        width: 18px;\n        height: 18px;\n        border-radius: 9px;\n        border: 5px solid ${props => props.foregroundColor};\n      }\n      &:after {\n        top: 5px;\n        left: 32px;\n        width: 6px;\n        height: 18px;\n        border-radius: 40%;\n        transform-origin: 50% 50%;\n        background: ${props => props.foregroundColor};\n        opacity: 0;\n      }\n      &:active {\n        transform: scale(0.92);\n      }\n    }\n    &:checked {\n      & + span {\n        background: ${props => props.onColor};\n        box-shadow: 0 8px 16px -1px ${props => props.onColorShadow};\n        &:before {\n          width: 0px;\n          border-radius: 3px;\n          margin-left: 27px;\n          border-width: 3px;\n          background: #fff;\n        }\n        &:after {\n          animation: ${props => props.blobChecked} 0.35s linear forwards 0.2s;\n        }\n      }\n    }\n    &:not(:checked) {\n      & + span {\n        &:before {\n          animation: ${props => props.blob} 0.85s linear forwards 0.2s;\n        }\n      }\n    }\n  }\n\n  * {\n    box-sizing: border-box;\n    &:before,\n    &:after {\n      box-sizing: border-box;\n    }\n  }\n`;\n\nHorizontalWrapper.propTypes = {\n  onColor: hexColorPropType,\n  offColor: hexColorPropType,\n  foregroundColor: hexColorPropType\n};\n\nHorizontalWrapper.defaultProps = {\n  onColor: \"#48EA8B\",\n  offColor: \"#FF4651\",\n  foregroundColor: \"#fff\"\n};\n\nexport default HorizontalWrapper;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HorizontalWrapper } from \"./wrappers\";\n\nimport twoParamFuncPropType from \"./util/twoParamFuncPropType\";\n\nclass HorizontalSwitch extends Component {\n  onChange = e => {\n    const isChecked = e.target.checked;\n    if (this.props.onStateChange !== undefined) {\n      this.props.onStateChange(isChecked, this.props.key);\n    }\n  };\n\n  render() {\n    let { defaultChecked, disabled } = this.props;\n\n    return (\n      <HorizontalWrapper>\n        <input\n          type=\"checkbox\"\n          defaultChecked={defaultChecked}\n          disabled={disabled}\n          onChange={this.onChange}\n        />\n        <span />\n      </HorizontalWrapper>\n    );\n  }\n}\n\nHorizontalSwitch.propTypes = {\n  onStateChange: twoParamFuncPropType,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  key: PropTypes.string\n};\n\nHorizontalSwitch.defaultProps = {\n  defaultChecked: false,\n  disabled: false,\n  key: \"sample-key\"\n};\n\nexport default HorizontalSwitch;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./style.css\";\nimport HorizontalSwitch from \"./lib/HorizontalSwitch\";\n\nclass App extends Component {\n\n  state = {\n    isChecked: false\n  };\n\n  handleChange = (isChecked, key) => {\n    console.log(key)\n    console.log(isChecked)\n  };\n\n  render() {\n    return (\n      <div>\n        <HorizontalSwitch onStateChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}